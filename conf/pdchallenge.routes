# Correlations

GET         /pdChallenge/correlations                                                        org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.index
GET         /pdChallenge/correlations/mpowerTeam                                             org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.mPowerTeamNetwork(aggOut: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.mean, aggIn: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.max, withDemographics: Boolean ?= false, corrThreshold: Option[Double] ?= None)
GET         /pdChallenge/correlations/ldopaTremorTeam                                        org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.tremorTeamNetwork(aggOut: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.mean, aggIn: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.max, withDemographics: Boolean ?= false, corrThreshold: Option[Double] ?= None)
GET         /pdChallenge/correlations/ldopaDyskinesiaTeam                                    org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.dyskinesiaTeamNetwork(aggOut: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.mean, aggIn: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.max, withDemographics: Boolean ?= false, corrThreshold: Option[Double] ?= None)
GET         /pdChallenge/correlations/ldopaBradykinesiaTeam                                  org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.bradykinesiaTeamNetwork(aggOut: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.mean, aggIn: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.max, withDemographics: Boolean ?= false, corrThreshold: Option[Double] ?= None)
GET         /pdChallenge/correlations/mpowerSubmission                                       org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.mPowerSubmissionNetwork(aggOut: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.mean, aggIn: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.max, withDemographics: Boolean ?= false, corrThreshold: Option[Double] ?= None)
GET         /pdChallenge/correlations/ldopaTremorSubmission                                  org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.tremorSubmissionNetwork(aggOut: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.mean, aggIn: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.max, withDemographics: Boolean ?= false, corrThreshold: Option[Double] ?= None)
GET         /pdChallenge/correlations/ldopaDyskinesiaSubmission                              org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.dyskinesiaSubmissionNetwork(aggOut: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.mean, aggIn: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.max, withDemographics: Boolean ?= false, corrThreshold: Option[Double] ?= None)
GET         /pdChallenge/correlations/ldopaBradykinesiaSubmission                            org.ada.web.controllers.pdchallenge.PDChallengeCorrelationController.bradykinesiaSubmissionNetwork(aggOut: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.mean, aggIn: org.ada.web.models.pdchallenge.AggFunction.Value ?= org.ada.web.models.pdchallenge.AggFunction.max, withDemographics: Boolean ?= false, corrThreshold: Option[Double] ?= None)


# Clusters

GET         /pdChallenge/clusters                                                            org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.index
GET         /pdChallenge/clusters/mpowerMDS                                                  org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.mPowerMDS(k: Int ?= 10, method: Int ?= 1, topRank: Option[Int] ?= None, leaveTopRank: Option[Int] ?= None)
GET         /pdChallenge/clusters/ldopaTremorMDS                                             org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.tremorMDS(k: Int ?= 10, method: Int ?= 1, topRank: Option[Int] ?= None, leaveTopRank: Option[Int] ?= None)
GET         /pdChallenge/clusters/ldopaDyskinesiaMDS                                         org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.dyskinesiaMDS(k: Int ?= 10, method: Int ?= 1, topRank: Option[Int] ?= None, leaveTopRank: Option[Int] ?= None)
GET         /pdChallenge/clusters/ldopaBradykinesiaMDS                                       org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.bradykinesiaMDS(k: Int ?= 10, method: Int ?= 1, topRank: Option[Int] ?= None, leaveTopRank: Option[Int] ?= None)
GET         /pdChallenge/clusters/mpowerTSNE                                                 org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.mPowerTSNE(k: Int ?= 10, method: Int ?= 1, pcaDims: Option[Int] ?= None, scaled: Boolean ?= true, topRank: Option[Int] ?= None, leaveTopRank: Option[Int] ?= None)
GET         /pdChallenge/clusters/ldopaTremorTSNE                                            org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.tremorTSNE(k: Int ?= 10, method: Int ?= 1, pcaDims: Option[Int] ?= None, scaled: Boolean ?= true, topRank: Option[Int] ?= None, leaveTopRank: Option[Int] ?= None)
GET         /pdChallenge/clusters/ldopaDyskinesiaTSNE                                        org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.dyskinesiaTSNE(k: Int ?= 10, method: Int ?= 1, pcaDims: Option[Int] ?= None, scaled: Boolean ?= true, topRank: Option[Int] ?= None, leaveTopRank: Option[Int] ?= None)
GET         /pdChallenge/clusters/ldopaBradykinesiaTSNE                                      org.ada.web.controllers.pdchallenge.PDChallengeClusteringController.bradykinesiaTSNE(k: Int ?= 10, method: Int ?= 1, pcaDims: Option[Int] ?= None, scaled: Boolean ?= true, topRank: Option[Int] ?= None, leaveTopRank: Option[Int] ?= None)